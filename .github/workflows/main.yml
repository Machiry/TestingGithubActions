# This is a basic workflow to help you get started with Actions

name: Nightly tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
    - cron: "20 6 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout our repository
      uses: actions/checkout@v2
      with:
        ref: Testing
      
    # Install all the required dependencies  
    - name: Install dependencies
      run : |
        cd ${{github.workspace}}/mainsource/testscripts
        chmod +x install_dependencies.sh
        ./install_dependencies.sh
        
    # clone and install bear
    # Needed for generating compile_commands.json    
    - name: Clone Bear
      uses: actions/checkout@v2
      with:
        repository: rizsotto/Bear
        path: depsfolder/bear
    - name: Install Bear
      run: |
        mkdir -p ${{runner.workspace}}/depsfolder/bear
        cd ${{runner.workspace}}/depsfolder/bear
        cmake ${{github.workspace}}/depsfolder/bear
        make all
        sudo make install

    # clone Checked C headers
    - name: Clone Checked C headers
      uses: actions/checkout@v2
      with:
        repository: microsoft/checkedc
        path: llvm/projects/checkedc-wrapper/checkedc
      
    # Runs a single command using the runners shell
    - name: Build CConv and clang
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{github.workspace}}/mainsource/CMakeLists.txt'
        buildDirectory: '${{runner.workspace}}/b/ninja'
        cmakeAppendedArgs: -G Ninja
    
    - name: Build vsftpd
      run: |
        mkdir ${{runner.workspace}}/vsftpd_testing
        wget https://security.appspot.com/downloads/vsftpd-3.0.3.tar.gz
        tar -xvzf vsftpd-3.0.3.tar.gz
        cd vsftpd-3.0.3
        bear make
        ls compile_commands.json
        
    - name: Testing vsftpd
      run: |
        cd ${{github.workspace}}/mainsource/testscripts/cconv-standalone/utils/cc_conv
        python convert_project.py --includeDir ${{github.workspace}}/llvm/projects/checkedc-wrapper/checkedc/include \\
        -p ${{runner.workspace}}/b/ninja/mainsource -pr ${{runner.workspace}}/vsftpd_testing/vsftpd-3.0.3

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Running the program,
        ${{runner.workspace}}/b/ninja/mainsource
